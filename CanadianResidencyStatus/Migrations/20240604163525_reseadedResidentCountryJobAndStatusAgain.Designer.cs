// <auto-generated />
using System;
using CanadianResidencyStatus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CanadianResidencyStatus.Migrations
{
    [DbContext(typeof(CanadianRecidencyStatusDbContext))]
    [Migration("20240604163525_reseadedResidentCountryJobAndStatusAgain")]
    partial class reseadedResidentCountryJobAndStatusAgain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CanadianResidencyStatus.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nigeria",
                            ShortName = "Ng"
                        },
                        new
                        {
                            Id = 2,
                            Name = "India",
                            ShortName = "In"
                        },
                        new
                        {
                            Id = 3,
                            Name = "China",
                            ShortName = "Ch"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ghana",
                            ShortName = "Gh"
                        },
                        new
                        {
                            Id = 5,
                            Name = "United State Of America",
                            ShortName = "USA"
                        });
                });

            modelBuilder.Entity("CanadianResidencyStatus.Data.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Wages")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfEmployment = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9858),
                            JobName = "Software Engineer",
                            Position = "Senior Developer",
                            Status = "Currently Employed",
                            Wages = 500000.00m
                        },
                        new
                        {
                            Id = 2,
                            DateOfEmployment = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9917),
                            JobName = "Software Engineer",
                            Position = "CTO",
                            Status = "Currently Employed",
                            Wages = 700000.00m
                        },
                        new
                        {
                            Id = 3,
                            DateOfEmployment = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9920),
                            JobName = "Designer",
                            Position = "UI",
                            Status = "Currently Employed",
                            Wages = 400000.00m
                        },
                        new
                        {
                            Id = 4,
                            DateOfEmployment = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9925),
                            JobName = "Software Engineer",
                            Position = "Cloud Engineer",
                            Status = "Currently Employed",
                            Wages = 300000.00m
                        },
                        new
                        {
                            Id = 5,
                            DateOfEmployment = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9930),
                            JobName = "Software Engineer",
                            Position = "Tester",
                            Status = "Currently Employed",
                            Wages = 200000.00m
                        });
                });

            modelBuilder.Entity("CanadianResidencyStatus.Data.Resident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("residents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Woodbine Ave",
                            City = "Sudbury",
                            CountryId = 1,
                            DateOfEntry = new DateTime(2024, 6, 4, 12, 35, 24, 677, DateTimeKind.Local).AddTicks(125),
                            JobId = 1,
                            Name = "Lawal Hammed",
                            PostalCode = "P34 678",
                            Province = "Ontario",
                            SIN = "9375683957",
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "King Street Profoundus",
                            City = "Sudbury",
                            CountryId = 2,
                            DateOfEntry = new DateTime(2024, 6, 4, 12, 35, 24, 677, DateTimeKind.Local).AddTicks(133),
                            JobId = 2,
                            Name = "Anjelo",
                            PostalCode = "P34 678",
                            Province = "Ontario",
                            SIN = "93756835674",
                            StatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "Toronto",
                            City = "Sudbury",
                            CountryId = 3,
                            DateOfEntry = new DateTime(2024, 6, 4, 12, 35, 24, 677, DateTimeKind.Local).AddTicks(136),
                            JobId = 3,
                            Name = "Bashiroh",
                            PostalCode = "P34 678",
                            Province = "Ontario",
                            SIN = "9375683294739547",
                            StatusId = 3
                        },
                        new
                        {
                            Id = 4,
                            Address = "Larch",
                            City = "Sudbury",
                            CountryId = 4,
                            DateOfEntry = new DateTime(2024, 6, 4, 12, 35, 24, 677, DateTimeKind.Local).AddTicks(140),
                            JobId = 4,
                            Name = "Ashish",
                            PostalCode = "P5M 678",
                            Province = "Ontario",
                            SIN = "949883957",
                            StatusId = 4
                        },
                        new
                        {
                            Id = 5,
                            Address = "Cambrian Residence",
                            City = "Sudbury",
                            CountryId = 5,
                            DateOfEntry = new DateTime(2024, 6, 4, 12, 35, 24, 677, DateTimeKind.Local).AddTicks(143),
                            JobId = 5,
                            Name = "Dade",
                            PostalCode = "P6B 390",
                            Province = "Ontario",
                            SIN = "99473553957",
                            StatusId = 5
                        });
                });

            modelBuilder.Entity("CanadianResidencyStatus.Data.StatusInCanada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("StatusExpiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("statusInCanada");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusExpiringDate = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9965),
                            StatusName = "Citizen"
                        },
                        new
                        {
                            Id = 2,
                            StatusExpiringDate = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9968),
                            StatusName = "Permanent Resident"
                        },
                        new
                        {
                            Id = 3,
                            StatusExpiringDate = new DateTime(2024, 6, 4, 12, 35, 24, 676, DateTimeKind.Local).AddTicks(9970),
                            StatusName = "Study Permit"
                        },
                        new
                        {
                            Id = 4,
                            StatusExpiringDate = new DateTime(2024, 6, 4, 12, 35, 24, 677, DateTimeKind.Local).AddTicks(88),
                            StatusName = "Work Permit"
                        },
                        new
                        {
                            Id = 5,
                            StatusExpiringDate = new DateTime(2024, 6, 4, 12, 35, 24, 677, DateTimeKind.Local).AddTicks(91),
                            StatusName = "Visitor"
                        });
                });

            modelBuilder.Entity("CanadianResidencyStatus.Data.Resident", b =>
                {
                    b.HasOne("CanadianResidencyStatus.Data.Country", "country")
                        .WithMany("Residents")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CanadianResidencyStatus.Data.Job", "job")
                        .WithMany("Residents")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CanadianResidencyStatus.Data.StatusInCanada", "status")
                        .WithMany("Residents")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");

                    b.Navigation("job");

                    b.Navigation("status");
                });

            modelBuilder.Entity("CanadianResidencyStatus.Data.Country", b =>
                {
                    b.Navigation("Residents");
                });

            modelBuilder.Entity("CanadianResidencyStatus.Data.Job", b =>
                {
                    b.Navigation("Residents");
                });

            modelBuilder.Entity("CanadianResidencyStatus.Data.StatusInCanada", b =>
                {
                    b.Navigation("Residents");
                });
#pragma warning restore 612, 618
        }
    }
}
